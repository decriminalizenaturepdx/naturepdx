{"version":3,"sources":["components/social-links/social-links.jsx","components/header/header.jsx","components/sign-up-form/sign-up-form.jsx","components/mission-statement/mission-statement.jsx","components/mushroom-carousel/mushroom-carousel.jsx","components/logo-slogan/logo-slogan.jsx","routes/home/home.jsx","components/app.jsx","serviceWorker.js","index.js"],"names":["SocialLinks","className","class","href","target","rel","src","alt","Header","useStyles","makeStyles","theme","heading","margin","root","spacing","display","flexDirection","alignItems","borderBottomColor","color","emailRegEx","SignUpForm","classes","useState","firstNameValue","setFirstNameValue","firstNameInvalid","setFirstNameInvalid","lastNameValue","setLastNameValue","lastNameInvalid","setLastNameInvalid","emailValue","setEmailValue","emailInvalid","setEmailInvalid","invalidResponse","setInvalidResponse","submitSuccessful","setSubmitSuccessful","isSubmitting","setIsSubmitting","validateInputs","invalid","trim","test","handleSubmit","event","a","preventDefault","stopPropagation","body","firstName","lastName","email","fetch","method","headers","JSON","stringify","resp","status","noValidate","autoComplete","onSubmit","TextField","error","helperText","label","onChange","evt","value","type","variant","Alert","severity","Button","disabled","CircularProgress","MissionStatement","MushroomCarousel","showThumbs","autoPlay","infiniteLoop","showStatus","LogoSlogan","Home","renderContent","query","App","CssBaseline","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.59d750c8.chunk.js","sourcesContent":["import React  from 'react';\nimport './styles.css'\n\nconst SocialLinks = () => (\n  <div className=\"SocialLinks\">\n    <a\n      class=\"SocialLink\"\n      href=\"https://www.facebook.com/Decriminalize-Nature-Portland-1826297640855055/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582421213/facebook-64_hdx5ub.png\" alt='Facebook page' />\n    </a>\n    <a\n      class=\"SocialLink\"\n      href=\"https://www.instagram.com/decriminalizenatureportland/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582421213/instagram-64_yuvcfn.png\" alt=\"Instagram feed\" />\n    </a>\n    <a\n      class=\"SocialLink\"\n      href='https://twitter.com/NaturePortland'\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582421213/twitter-64_btpqvu.png\" alt=\"Twitter feed\" />\n    </a>\n  </div>\n)\n\nexport default SocialLinks\n","import React  from 'react'\nimport SocialLinks from '../social-links'\nimport './style.css'\n\nconst Header = () => {\n\n  return (\n    <div className=\"header\">\n        <div className=\"wrapper\">\n          <h1>Let'em Grow</h1>\n          <SocialLinks />\n        </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState }  from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Alert from '@material-ui/lab/Alert'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    margin: '32px 0 0 !important'\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    },\n    '&': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'baseline'\n    },\n    '& .Mui-error:after': {\n      borderBottomColor: '#9a1f16'\n    },\n    '& .Mui-error': {\n      color: '#9a1f16'\n    }\n  }\n}))\n\nconst emailRegEx = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n\nconst SignUpForm = () => {\n  const classes = useStyles()\n  const [firstNameValue, setFirstNameValue] = useState('')\n  const [firstNameInvalid, setFirstNameInvalid] = useState(false)\n  const [lastNameValue, setLastNameValue] = useState('')\n  const [lastNameInvalid, setLastNameInvalid] = useState(false)\n  const [emailValue, setEmailValue] = useState('')\n  const [emailInvalid, setEmailInvalid] = useState(false)\n  const [invalidResponse, setInvalidResponse] = useState(false)\n  const [submitSuccessful, setSubmitSuccessful] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const validateInputs = () => {\n    let invalid = false\n\n    if (!firstNameValue || !firstNameValue.trim()) {\n      setFirstNameInvalid(true)\n      invalid = true\n    } else {\n      setFirstNameInvalid(false)\n    }\n\n    if (!lastNameValue || !lastNameValue.trim()) {\n      setLastNameInvalid(true)\n      invalid = true\n    } else {\n      setLastNameInvalid(false)\n    }\n\n    if (!emailValue || !emailRegEx.test(emailValue) || !emailValue.trim()) {\n      setEmailInvalid(true)\n      invalid = true\n    } else {\n      setEmailInvalid(false)\n    }\n    return invalid\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n    event.stopPropagation()\n    const isInvalid = validateInputs()\n    if (!isInvalid) {\n      const body = {\n        firstName: firstNameValue.trim(),\n        lastName: lastNameValue.trim(),\n        email: emailValue.trim()\n      }\n      try {\n        setIsSubmitting(true)\n        const resp = await fetch('/api/newsletter', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        })\n        if (resp.status >= 400) {\n          throw resp\n        }\n        setSubmitSuccessful(true)\n        setInvalidResponse(false)\n      } catch (err) {\n        setInvalidResponse(true)\n      } finally {\n        setIsSubmitting(false)\n      }\n    }\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate\n      autoComplete='off'\n      onSubmit={handleSubmit}\n    >\n      <h3 className={classes.heading}>Sign Up to Our Newsletter</h3>\n      <TextField\n        error={firstNameInvalid}\n        helperText={firstNameInvalid ? 'This is a required field' : ''}\n        label='First name'\n        onChange={evt => setFirstNameValue(evt.target.value)}\n        type='text'\n        value={firstNameValue}\n        variant='filled'\n      />\n      <TextField\n        error={lastNameInvalid}\n        helperText={lastNameInvalid ? 'This is a required field' : ''}\n        label='Last name'\n        onChange={evt => setLastNameValue(evt.target.value)}\n        type='text'\n        value={lastNameValue}\n        variant='filled'\n      />\n      <TextField\n        error={emailInvalid}\n        helperText={emailInvalid ? 'Please type a valid email address' : ''}\n        label='Email'\n        onChange={evt => setEmailValue(evt.target.value)}\n        type='text'\n        value={emailValue}\n        variant='filled'\n      />\n      {invalidResponse && (\n        <Alert severity='error'>Something went wrong please try again</Alert>\n      )}\n      {submitSuccessful && (\n        <Alert severity='success'>Thank you for signing up</Alert>\n      )}\n      <Button\n        variant='contained'\n        type='submit'\n        disabled={isSubmitting || submitSuccessful}\n      >\n        Submit\n      </Button>\n      {isSubmitting && <CircularProgress />}\n    </form>\n  )\n}\n\nexport default SignUpForm\n","import React from 'react'\nimport './styles.css'\n\nconst MissionStatement = () => {\n  return (\n    <div className=\"mission-statement\">\n      <h3>Mission Statement</h3>\n      <div>\n        Decriminalize Nature Portland is a cadre of Earth activists who are\n        working to decriminalize medicinal plants and fungi that are schedule 1\n        under arbitrary federal law.\n      </div>\n      <p>\n        We are currently circulating for the initiative petition\n        \"Decriminalization of Natural Psychedelics\" (PDX02) intended for the\n        2020 ballot for the city of Portland Oregon\n      </p>\n      <div>\n        <ul>\n          <li className=\"nav-item\">\n            <a\n              className=\"link\"\n              target=\"_blank\"\n              href=\"https://www.portlandoregon.gov/auditor/article/745466\"\n              rel=\"noopener noreferrer\"\n            >\n              Election Ballot\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default MissionStatement\n","import React from 'react'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport { Carousel } from 'react-responsive-carousel'\n\nconst MushroomCarousel = () => (\n  <Carousel showThumbs={false} autoPlay infiniteLoop showStatus={false}>\n    <div>\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582496393/mushrooms03_xjygxg.jpg\" alt=\"Mushroom foraging\" />\n    </div>\n    <div>\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582495250/conference01_dgklgf.jpg\" alt=\"Medicinal mushroom conference\" />\n    </div>\n    <div>\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582495220/mushrooms02_fynwh3.jpg\" alt=\"Mushroom foraging\" />\n    </div>\n    <div>\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582495238/conference02_qr8esd.jpg\" alt=\"Medicinal mushroom conference\"/>\n    </div>\n  </Carousel>\n)\n\nexport default MushroomCarousel\n","import React from 'react'\nimport './styles.css'\n\nconst LogoSlogan = () => {\n  return (\n    <div className=\"logo-slogan\">\n      <img src=\"https://res.cloudinary.com/dakhemwii/image/upload/v1582421214/logo_k2k2yy.jpg\" alt=\"Logo\" />\n      <p>\n        <h2>\n          - It is an unalienable right to develop your own relationship with Nature\n        </h2>\n      </p>\n    </div>\n  )\n}\n\nexport default LogoSlogan\n","import React  from 'react'\nimport SignUpForm from '../../components/sign-up-form'\nimport MissionStatement from '../../components/mission-statement'\nimport MushroomCarousel from '../../components/mushroom-carousel'\nimport MediaQuery from 'react-responsive/src/Component'\nimport LogoSlogan from '../../components/logo-slogan'\nimport './style.css'\n\nconst Home = () => {\n  const renderContent = () => (\n    <>\n      <LogoSlogan />\n      <MissionStatement />\n      <MushroomCarousel />\n      <SignUpForm />\n    </>\n  )\n\n  return (\n    <div className=\"home-root\">\n      <MediaQuery query='(max-device-width: 768px)'>\n        {renderContent()}\n      </MediaQuery>\n      <MediaQuery query='(min-device-width: 769px)'>\n        <div className=\"home-wrapper\">{renderContent()}</div>\n      </MediaQuery>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Header from './header'\nimport Home from '../routes/home'\n\nexport default class App extends Component {\n\n  render () {\n    return (\n      <>\n        <CssBaseline />\n        <Header />\n        <Home />\n      </>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto'\nimport './style/base.css'\nimport App from './components/app'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}